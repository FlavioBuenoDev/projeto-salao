# Docker Compose para desenvolvimento local
# Execute: docker-compose up -d

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: salao_postgres
    environment:
      POSTGRES_USER: salao_user
      POSTGRES_PASSWORD: salao_pass
      POSTGRES_DB: salao_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=pt_BR.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U salao_user -d salao_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - salao_network

  # pgAdmin (Interface gr√°fica para PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: salao_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@salao.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - salao_network

  # Backend API (Opcional - se quiser rodar no Docker)
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: salao_backend
  #   environment:
  #     DATABASE_URL: postgresql://salao_user:salao_pass@postgres:5432/salao_db
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./backend:/app
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   restart: unless-stopped
  #   networks:
  #     - salao_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  salao_network:
    driver: bridge
