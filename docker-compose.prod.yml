 #Docker Compose para ambiente de produção
# Execute: docker-compose -f docker-compose.prod.yml up -d

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: salao_postgres_prod
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - salao_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: salao_backend_prod
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      ENVIRONMENT: production
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - salao_network

  nginx:
    image: nginx:alpine
    container_name: salao_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - backend
    restart: always
    networks:
      - salao_network

volumes:
  postgres_prod_data:

networks:
  salao_network:
    driver: bridge